openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8010
  description: Generated server url
paths:
  /api/v1/employees:
    get:
      tags:
      - employees-controller
      operationId: findAllEmployees
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
    post:
      tags:
      - employees-controller
      operationId: saveNewEmployee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Employee'
  /api/v1/employees/{publicId}:
    get:
      tags:
      - employees-controller
      operationId: findEmployeeByPublicId
      parameters:
      - name: publicId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Employee'
    put:
      tags:
      - employees-controller
      operationId: updateEmployee
      parameters:
      - name: publicId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Employee'
    delete:
      tags:
      - employees-controller
      operationId: deleteEmployee
      parameters:
      - name: publicId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
  /api/v1/employees/count:
    get:
      tags:
      - employees-controller
      operationId: getEmployeeCount
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int64
  /api/v1/employees/search:
    get:
      tags:
      - employees-search-controller
      operationId: findAllEmployees_1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
    post:
      tags:
      - employees-search-controller
      operationId: searchEmployees
      requestBody:
        content:
          application/json:
            schema:
              # relative paths not working. paths must be absolute because the parsing is evaluated on the client
              $ref: 'https://raw.githubusercontent.com/mambarek/apis-definitions-repo/master/definitions/commons/v1/shared-objects-schema.yaml#/components/schemas/SearchTemplate'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EmployeeTableItemList'

  /api/v1/employees/jms:
    get:
      summary: This is a dummy API its used only to generate JMS artifacts on the client side
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EmployeeExportEvent'
components:
  schemas:
    Document:
      required:
      - contentType
      - name
      - publicId
      type: object
      properties:
        publicId:
          type: string
          format: uuid
        name:
          maxLength: 100
          minLength: 3
          type: string
        contentType:
          maxLength: 20
          minLength: 3
          type: string
        content:
          type: array
          items:
            type: string
            format: byte
    Employee:
      required:
      - createdAt
      - createdBy
      - publicId
      type: object
      properties:
        publicId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: string
          format: uuid
        updatedBy:
          type: string
          format: uuid
        data:
          $ref: 'https://raw.githubusercontent.com/mambarek/apis-definitions-repo/master/definitions/commons/v1/master-data-schema.yaml#/components/schemas/PersonData'
        salary:
          type: number
          format: double
        weekendWork:
          type: boolean
        traveling:
          type: boolean
        documents:
          type: array
          items:
            $ref: '#/components/schemas/Document'
        assignedProjects:
          type: array
          items:
            type: string
            format: uuid

    EmployeeTableItem:
      type: object
      properties:
        publicId:
          type: string
          format: uuid
        firstName:
          type: string
        lastName:
          type: string
        birthDate:
          type: string
          format: date
        salary:
          type: number
          format: double
        traveling:
          type: boolean
        weekendWork:
          type: boolean
        createdAt:
          type: string
          format: date-time
        streetOne:
          type: string
        buildingNr:
          type: string
        city:
          type: string
        zipCode:
          type: string
        countryCode:
          type: string
    EmployeeTableItemList:
      type: object
      properties:
        resultList:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeTableItem'

    EmployeeExportEvent:
      type: object
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Employee'
