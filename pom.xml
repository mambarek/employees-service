<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.it2go.micro</groupId>
        <artifactId>microservices-bom</artifactId>
        <version>2.0.5</version>
    </parent>
    <artifactId>employees-service</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>employees-service</name>
    <description>Employees Microservice</description>

    <properties>
        <project-api.version>1.0.2-SNAPSHOT</project-api.version>
        <external-openapi-definitions-basedir>${project.build.directory}/openapi-definitions</external-openapi-definitions-basedir>
        <project-api-definition-basedir>${external-openapi-definitions-basedir}/project-api/BOOT-INF/classes</project-api-definition-basedir>

        <docker-maven-plugin>0.34.1</docker-maven-plugin>
        <dockerfile-maven-version>1.4.13</dockerfile-maven-version>
        <docker.source.directory>docker</docker.source.directory>
        <docker.build.directory>${project.build.directory}/docker</docker.build.directory>
        <docker.repository>mmbarek</docker.repository>
        <docker.image.name>${project.artifactId}</docker.image.name>
    </properties>

    <scm>
        <url>https://github.com/mambarek/employees-service.git</url>
        <developerConnection>scm:git:https://github.com/mambarek/employees-service.git
        </developerConnection>
    </scm>

    <dependencies>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>3.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>1.4.4</version>
        </dependency>
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
            <version>0.1.0</version>
        </dependency>
        <dependency>
            <groupId>com.it2go</groupId>
            <artifactId>shared-utils</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <annotationProcessorPaths>
                        <annotationProcessorPath>
                            <groupId>org.hibernate</groupId>
                            <artifactId>hibernate-jpamodelgen</artifactId>
                            <version>${hibernate.version}</version>
                        </annotationProcessorPath>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack-project-api-spec</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.it2go.micro</groupId>
                                    <artifactId>project-management-service</artifactId>
                                    <version>${project-api.version}</version>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <includes>**/project-api.yaml</includes>
                                </artifactItem>
                            </artifactItems>
                            <overWriteSnapshots>true</overWriteSnapshots>
                            <overWriteReleases>true</overWriteReleases>
                            <outputDirectory>${external-openapi-definitions-basedir}/project-api/</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>4.3.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <!-- Generate stubs from maven repo-->
                            <inputSpec>${project-api-definition-basedir}/project-api.yaml</inputSpec>
                            <!-- Generate stubs from local file -->
<!--
                            <inputSpec>
                                ${project.basedir}/src/main/resources/project-api.yaml
                            </inputSpec>
-->
                            <generatorName>spring</generatorName>
                            <modelPackage>com.it2go.micro.projectservice.domain</modelPackage>
                            <skipValidateSpec>true</skipValidateSpec>
                            <withXml>true</withXml>
                            <generateSupportingFiles>false</generateSupportingFiles>
                            <generateApis>false</generateApis>
                            <generateApiDocumentation>false</generateApiDocumentation>
                            <generateModelDocumentation>true</generateModelDocumentation>
                            <verbose>false</verbose>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker-maven-plugin}</version>
                <configuration>
                    <verbose>true</verbose>
                    <images>
                        <image>
                            <name>${docker.repository}/${docker.image.name}</name>
                            <build>
                                <contextDir>${project.basedir}</contextDir>
                                <dockerFile>docker/Dockerfile</dockerFile>
                                <assembly>
                                    <descriptorRef>artifact</descriptorRef>
                                </assembly>
                                <tags>
                                    <tag>${project.version}</tag>
                                </tags>
                            </build>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>default</id>
                        <phase>install</phase>
                        <goals>
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- dockerfile-maven-plugin not working if Dockerfile not in project root-->
<!--            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>${dockerfile-maven-version}</version>
                <executions>
                    <execution>
                        <id>default</id>
                        <goals>
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <repository>${docker.repository}/${docker.image.name}</repository>
                    <tag>${project.version}</tag>
                    <dockerfile>docker/Dockerfile</dockerfile>
                </configuration>
            </plugin>-->
        </plugins>
    </build>

</project>
